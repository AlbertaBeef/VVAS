#############################
Installation
#############################

This section covers the detailed steps to install various VVAS dependencies for the ``Alveo U30`` platform. Installation process is splitted into hardware installation and software installation.

******************************************************
Software Installation
******************************************************

This section covers installatiion of various software dependencies for the VVAS framework.

#. Download the packages::

      git clone https://gitenterprise.xilinx.com/IPS-SSW/aws-ivas-installer.git 
      git checkout be316eb7b7d56b0483c0be8065352341e5bcdec3

#. Unzip the package, which has the following contents:

   - ``dc.xclbin``: ``xclbin`` to be download on devices of U30 card
   - ``doc``: Contains documents related to sample applications

      - ivas_xcompositor
      - ivas_xabrladder

   - ``install_gst.sh``: Script to build & install open source GStreamer version 1.16.2.
    
   - ``patches``: contains patch to be applied on Open GStreamer 1.16.2 code. These patches are automatically applied when the “install_gst.sh” script is executed.
    
   - ``scripts/01_gst``: folder containing test scripts for validating various use cases. To understand the usage of each script, run the script without any arguments
    
   - ``setup.sh``: script to set up build time as well as runtime environment variables.

#. Install GStreamer version 1.16.2::

      source ./install_gst.sh

#. Install VVAS plugins and applications::

      source install_ivas.sh

Command clones the VVAS source code, compiles & installs all VVAS GStreamer plugins & sample applications required for AWS. Like open source GStreamer installation, all VVAS binaries will be installed in /opt/xilinx/ivas folder.

****************************************************
Hardware Installation
****************************************************

This section covers installation related to different operating system and different cards.
 

Alveo U30 platform
------------------------------------

Alveo U30 platform is supported on below mentioned Operating Systems:

- Ubuntu 20.04 (Kernel 5.4)
- Ubuntu 18.04 (Kernel 5.4)
- RHEL 7.8 (Kernel 4.9.184)


Prerequisite
----------------------

The U30 card must be hosted in a server that supports bifurcated Gen3x8 to form two independent Gen3x4 PCI-Express compliant interfaces to target the two devices on the card.

The installation instructions require a bash shell. Make sure to be using one when installing the packages.

The installation instructions provided should only be used with the OEM version of the U30 card. If you do not have an OEM card, or if you are unsure of which card version you have, please contact Xilinx.

If you need to upgrade a system with version 0.95.0 (Alpha) or older installed, please contact Xilinx.


Installation Instructions
------------------------------

#. Download the packages by cloning the `devl` branch of this repository
   ::

    git clone https://github.com/Xilinx/video-sdk-staging -b devl

#. Navigate to the directory containing the packages corresponding to your Operating System
   ::

    cd ./video-sdk-staging/release/<os>

#. Install the software packages
   ::

    ./install.sh

#. Program the binary images in the nonvolatile flash memories of the U30 devices in your system
   ::

    sudo ./u30flashall.sh

#. Cold boot the machine to have the cards use the new binaries
   ::

    sudo shutdown now

#. After the cold boot is complete, check if all the cards are up to date
   ::

    cd ./video-sdk-staging/release/<os>
    sudo ./u30flashall.sh

   + If all cards are up to date, the script will report so and terminate. You can proceed to the next step. 
   + Otherwise, you will see one or more messages indicating "Actions to perform: Program Satellite Controller (SC) image" and the script will perform the required Satellite Controller updates. After all updates are completed, perform a warm reboot of the machine.

#. Test that the installation was successful with the command below. This script will run a validation test on each of the U30 devices in your system. For each of the tests, you should see a message indicating "Validated successfully [1 device(s)]"::

    ./u30validateall.sh


.. _end-of-installation:
